Tiny COBOL 0.54 からの変更点				-*- outline -*-

* パッケージの変更点

** Autoconf 2.52, Automake 1.5, Libtool 1.4 を利用

** パーサ生成に Bison を利用

** Bison/Flex によって生成された C ソースを配布

configure; make するときに Bison/Flex は必要ない。

** スクリプト cob-config を作成

cobc によって生成されたファイルを gcc でリンクするとき、
必要となるオプションを出力する。次のようにして使う。

  % cobc -c foo.cob
  % gcc -o foo foo.o `cob-config --libs`

** ソースレイアウトの変更

  open-cobol/cobc/              コンパイラ
  open-cobol/cobpp/             プリプロセッサ
  open-cobol/libcob/            実行時ライブラリ

** インストールディレクトリの変更

標準では次のようにインストールされる。

  $(PREFIX)/bin/cobc                    コンパイラ
  $(PREFIX)/libexec/open-cobol/cobpp    プリプロセッサ
  $(PREFIX)/lib/libcob.a                実行時ライブラリ
  $(PREFIX)/lib/open-cobol/             各種モジュール

** db ライブラリの自動判定を止め、db1 を必須とした

ヘッダファイル db1/db.h、及びライブラリ libdb1 が
インストールされている必要がある。

** 数値計算のために GMP ライブラリに依存するようになった

** C プログラムを GNU スタイルでインデント

* コンパイラの変更点

** コンパイラ名は cobc

  cobc [options] file...

オプションなしで実行した場合、実行ファイルが生成される。
指定出来るオプションは次の通り:

  --help        ヘルプメッセージを表示
  --version     バージョン番号を表示
  -save-temps   中間ファイルを削除しない
  -static       CALL 文で静的呼び出しを行なう。
  -dynamic      CALL 文で動的呼び出しを行なう。

  -E            前処理(COPY, REPLACE 等)のみ実行
  -S            コンパイルのみ実行 (*.s を生成)
  -c            アセンブルまで実行 (*.o を生成)
  -m            モジュールを作成 (*.so を生成)
  -g            デバッグ情報付きでコンパイル
  -o <file>     出力をファイル <file> に書き出す

  -F            ソースを固定幅フォーマットとして扱う
  -X            ソースを自由フォーマットとして扱う
  -D            デバッグ行(`D' で始まる行)を有効にする
  -I <path>     COPY ファイルの検索に <path> を追加

** CALL 文が標準で動的呼び出しを行なうようにした

TinyCOBOL のように定数の呼び出しで静的リンクを行なうには、
コンパイラオプション -static を指定する。

** 動的モジュールの扱いを整理

CALL 文で動的呼び出しが指定された場合、プログラムがダイナ
ミックにリンクされる。これは次のようにして行なう。

1. 呼び出されるプログラム(モジュール)を生成

     cobc -m module.cob

2. メインプログラムを生成

     cobc -o main main.cob

3. 環境変数 COB_LIBRARY_PATH にモジュールのあるディレクトリを
   セットし、メインプログラムを実行

     export COB_LIBRARY_PATH=.
     ./main

   なお、COB_LIBRARY_PATH の初期値は ".:$(PREFIX)/lib/open-cobol"
   となっている。

** ソースのフォーマット(fixed/free)を簡易的に自動判定

一行目の先頭 6 文字を見て、それが数字で始まっているか、
もしくはすべて空白の場合、固定フォーマットとみなす。
それ以外の場合、自由フォーマットとみなす。

** 以下の環境変数を指定可能 (括弧内はデフォルト値)

  COB_CC            利用する C コンパイラ ("cc")
  COB_COBPP         プリプロセッサ ("$(PREFIX)/libexec/open-cobol/cobpp")
  COB_LIBADD        リンクするライブラリ ("-L$(PREFIX)/lib -lcob")
  COB_LIBRARY_PATH  ライブラリのパス (".:$(PREFIX)/lib/open-cobol")

* COBOL レベルの変更点

** PIC の文字として `N' (日本語)を認識

現時点では、内部的に `X' 二つに置き換えるだけの便宜的対応。

** 数値計算を全面的に見直し

*** 内部処理に多バイト整数を使い、誤差が出ないようにした

*** 割り算で小数点以下 18 桁までの精度で計算するようにした

*** オーバーフロー時に有効桁数分の値をセットするようにした

** CANCEL を実装

** 組み込み関数機能(FUNCTION ...)を無効にした

将来的に再設計・再実装する。

* C レベルの変更点

** ヘッダファイル libcob.h を用意

C から COBOL の機能を呼ぶときに使える関数を定義している。

** 関数 cob_resolve, cob_resolve_error

cob_resolve は、COBOL モジュールを動的に探して見付かった関数を返す。
cob_resolve_error は、モジュールが見付からなかったときに、その原因を
示す文字列を返す。
