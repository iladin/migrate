# COBOL compiler configuration					-*- sh -*-

# Value: any string
name: "OpenCOBOL"

# Value: int
tab-width: 8
text-column: 72

# Value: `auto', `free', `fixed'
source-format: fixed

# Value: `yes', `no'
device-predefine: no

# How to interpret the form: ASSIGN TO <identifier>
#
# Value:
# 
# `device-name' <identifier> will be a device name.
#               This conforms to COBOL 2002.
# `data-name'   <identifier> will be a data name.
#               The name may be declared in the Data Division,
#               or it will be declared implicitly.
#               This is compatible with MF COBOL.
# `literal'     <identifier> will be converted to a literal.
assign-identifier: data-name

# If yes, file names are resolved at run time using environment variables.
# For example, given ASSIGN TO "DATAFILE", the actual file name will be
#  1. the value of environment variable `DD_DATAFILE' or
#  2. the value of environment variable `dd_DATAFILE' or
#  3. the value of environment variable `DATAFILE' or
#  4. the literal "DATAFILE"
# If no, the value of the assign clause is the file name.
# 
# Value: `yes', `no'
filename-mapping: no

# Value: `yes', `no'
pretty-display: yes

# Value: `yes', `no'
auto-initialize: yes

# Value:            sign  0123456789
#                   ----  ----------
# `ascii'       positive  0123456789
#               negative  pqrstuvwxy
#
# `ebcdic'      positive  {ABCDEFGHI
#               negative  }JKLMNOPQR
#
# `ascii10'     positive  0123456789
#               negative  @ABCDEFGHI
#
# `ascii20'     positive  @ABCDEFGHI
#               negative  PQRSTUVWXY
display-sign: ascii

# Value:         signed  unsigned  bytes
#                ------  --------  -----
# `2-4-8'        1 -  4                2
#                5 -  9                4
#               10 - 18                8
#
# `1-2-4-8'      1 -  2                1
#                3 -  4                2
#                5 -  9                4
#               10 - 18                8
#
# `1--8'         1 -  2    1 -  2      1
#                3 -  4    3 -  4      2
#                5 -  6    5 -  7      3
#                7 -  9    8 -  9      4
#               10 - 11   10 - 12      5
#               12 - 14   13 - 14      6
#               15 - 16   15 - 16      7
#               17 - 18   17 - 18      8
binary-size: 1-2-4-8

# Value: `yes', `no'
binary-truncate: yes

# Value: `native', `big-endian'
binary-byteorder: big-endian

# Value: `ok', `archaic', `obsolete', `ignore', `unconformable'
author-paragraph:		obsolete
memory-size-clause:		obsolete
multiple-file-tape-clause:	obsolete
label-records-clause:		obsolete
value-of-clause:		obsolete
data-records-clause:		obsolete
alter-statement:		obsolete
goto-statement-without-name:	obsolete
stop-literal-statement:		obsolete
debugging-line:			obsolete
padding-character-clause:	obsolete
next-sentence-phrase:		archaic
entry-statement:		obsolete
